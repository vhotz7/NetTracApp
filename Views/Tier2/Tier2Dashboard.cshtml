@model IEnumerable<NetTracApp.Models.InventoryItem>

@{
    ViewData["Title"] = "Tier2Dashboard";
}

<style>
    /* Ensure table uses full width and adapts dynamically */
    #inventoryTable {
        width: 100%; /* Use available width */
        max-width: 1800px; /* Adjust for expanded view */
        margin: 0 auto; /* Center the table horizontally */
        font-size: 14px;
        border-collapse: collapse; /* Prevent double borders */
        table-layout: auto; /* Allow columns to resize based on content */
    }

    /* Ensure table headers and data cells align properly */
    th, td {
        padding: 12px 8px; /* Add padding for readability */
        text-align: center;
        white-space: nowrap; /* Prevent text wrapping */
    }

    .thead-dark th {
        background-color: #343a40;
        color: white;
    }

    /* Extra columns are hidden by default */
    .extra-column {
        display: none;
    }

    /* Scrollable table on smaller screens */
    .table-responsive {
        overflow-x: auto;
        margin-bottom: 20px;
    }

    /* Ensure checkboxes are properly aligned */
    .checkbox-column {
        width: 35px; /* Adjust width as needed */
        text-align: center;
    }

    .form-check-input {
        width: 12px;
        height: 12px;
        margin: 0 auto;
        display: block;
    }

    /* Edit button styling */
    .btn-edit {
        background-color: #ac3e0b;
        color: white;
        border: none;
    }

        .btn-edit:hover {
            background-color: #e05c1a;
        }

    /* Delete button styling */
    .btn-delete {
        background-color: #970000;
        color: white;
        border: none;
    }

        .btn-delete:hover {
            background-color: #b30000;
        }

    /* "Create New Item" button styling */
    .btn-custom-orange {
        background-color: #ac3e0b;
        color: white;
        font-weight: bold;
        padding: 10px 15px;
        border: none;
        cursor: pointer;
    }

        .btn-custom-orange:hover {
            background-color: #e05c1a;
        }

    .toggle-container {
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 20px;
    }

    .toggle-button {
        width: 40px;
        height: 20px;
        background-color: #ddd; /* default color when off */
        border: none;
        border-radius: 10px;
        position: relative;
        cursor: pointer;
        transition: background-color 0.3s;
        margin-right: 10px; /* space between button and text */
    }

        .toggle-button.active {
            background-color: #ac3e0b; /* orange color when active */
        }

        .toggle-button::before {
            content: "";
            position: absolute;
            top: 2px;
            left: 2px;
            width: 16px;
            height: 16px;
            background-color: white;
            border-radius: 50%;
            transition: transform 0.3s;
        }

        .toggle-button.active::before {
            transform: translateX(20px); /* move toggle circle when active */
        }
    /* Ensure content is vertically aligned */
    .table th, .table td {
        vertical-align: middle;
    }

    /* Add spacing at the bottom */
    .container {
        padding-bottom: 70px;
    }

    /* Smooth transition when showing extra columns */
    .extra-column {
        display: none;
        transition: display 0.3s;
    }
</style>

<div class="search-border" style="background-color: black; height: 45px; display: flex; align-items: center; justify-content: space-between; padding-left: 10px; padding-right: 10px; border-radius: 8px; margin-top: 20px; margin-bottom: 5px; max-width: 2000px; margin-left: auto; margin-right: auto; box-sizing: border-box;">
    <div class="search-text" style="color: orange; font-size: 15px; display: flex; align-items: center;">
        Search Inventory
    </div>



    <div class="search-length" style="flex-grow: 1; max-width: 800px; padding-left: 10px;">
        <!-- Search Form -->
        <div class="search-form" style="width: 100%;">
            <form asp-action="Tier2Dashboard" method="get" style="width: 100%; display: flex; align-items: center;">
                <div class="form-group" style="margin-bottom: 0; width: 100%; display: flex; align-items: center;">
                    <input type="text" name="searchString" class="form-control" placeholder="Search by Vendor or Serial Number" style="height: 35px; width: 100%; box-sizing: border-box;" />
                </div>
            </form>
        </div>
    </div>

    <div class="toggle-container" style="display: flex; align-items: center; justify-content: center;">
        <span class="toggle-text" style="color: white; font-weight: bold; margin-right: 10px;">
            Data View
        </span>
        <button id="toggleExpand" class="toggle-button" onclick="toggleColumns()" style="height: 20px; display: flex; align-items: center; justify-content: center;"></button>
    </div>
</div>




<!-- CSV Upload Form -->
<div class="mb-4">
    <form asp-action="UploadFile" method="post" enctype="multipart/form-data">
        <div class="form-group">
            <!-- Wrap file input and upload button in a flexbox container -->
            <label for="file">Upload CSV File(s):</label>
            <div style="display: flex; align-items: center;">
                <!-- File input field allowing multiple file uploads -->
                <input type="file" name="files" class="form-control-file" multiple style="margin-right: 10px;" />
                <!-- Button placed directly next to the file input field -->
                <button type="submit" class="btn btn-custom-orange" style="height: auto;">Upload</button>
            </div>
        </div>
    </form>
</div>

<div style="text-align: right; margin-bottom: 10px;">
    <a asp-controller="InventoryItems" asp-action="Create" style="color: #ac3e0b; font-weight: bold; text-decoration: none;">
        Create New Inventory Item
    </a>
</div>



<form asp-action="DeleteSelected" method="post">
    <table id="inventoryTable" class="table table-striped table-bordered">
        <thead class="thead-dark">
            <tr>
                <!-- Select All Checkbox Column -->
                <th class="checkbox-column">
                    <input type="checkbox" class="form-check-input" id="selectAll" />
                </th>
                <th>Vendor</th>
                <th>Device Type</th>
                <th>Serial #</th>
                <th>Host Name</th>
                <th>Asset Tag</th>
                <th>CurrentLocation</th>
                <th>FutureLocation</th>
                <th>Status</th>
                <th>Date Received</th>
                <th>Part ID</th>
                <th class="extra-column">Back Ordered</th>
                <th class="extra-column">Notes</th>
                <th class="extra-column">Product Description</th>
                <th class="extra-column">Ready</th>
                <th class="extra-column">Legacy Device</th>
                <th class="extra-column">Modified</th>
                <th class="extra-column">Created</th>
                <th class="extra-column">Created By</th>
                <th class="extra-column">Modified By</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                @foreach (var item in Model)
                {
                    <tr>
                        <td class="checkbox-column">
                            <input type="checkbox" class="form-check-input" name="selectedItems" value="@item.Id" />
                        </td>
                        <td>@item.Vendor</td>
                        <td>@item.DeviceType</td>
                        <td>@item.SerialNumber</td>
                        <td>@item.HostName</td>
                        <td>@item.AssetTag</td>
                        <td>@item.CurrentLocation</td>
                        <td>@item.FutureLocation</td>
                        <td>@item.Status</td>
                        <td>@item.DateReceived.ToString("MM/dd/yyyy")</td>


                        <td>@item.PartID</td>
                        <td class="extra-column">@item.BackOrdered</td>
                        <td class="extra-column">@item.Notes</td>
                        <td class="extra-column">@item.ProductDescription</td>
                        <td class="extra-column">@item.Ready</td>
                        <td class="extra-column">@item.LegacyDevice</td>
                        <td class="extra-column">@item.Modified</td>
                        <td class="extra-column">@item.Created</td>
                        <td class="extra-column">@item.CreatedBy</td>
                        <td class="extra-column">@item.ModifiedBy</td>
                        <td>
                            <a asp-controller="Tier2EditDashboard" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-edit btn-sm">Edit</a>
                            <a asp-controller="InventoryItems" asp-action="Delete" asp-route-id="@item.Id" class="btn btn-delete btn-sm">Delete</a>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="20" class="text-center">No inventory items found.</td>
                </tr>
            }
        </tbody>
    </table>
    <button type="submit" class="btn btn-delete btn-sm">Delete Selected (Pending Approval)</button>
</form>






<script>
    // function to toggle visibility of extra columns
    function toggleColumns() {
        var toggleButton = document.getElementById("toggleExpand");
        var extraColumns = document.querySelectorAll(".extra-column");
        var isActive = toggleButton.classList.toggle("active");

        // show or hide extra columns based on toggle button state
        extraColumns.forEach(function (column) {
            column.style.display = isActive ? "table-cell" : "none";
        });
    }
</script>

<script>
    document.getElementById('selectAll').addEventListener('change', function () {
        const checkboxes = document.querySelectorAll('input[name="selectedItems"]');
        checkboxes.forEach(checkbox => checkbox.checked = this.checked);
    });
</script>






@section Scripts {
    <script type="text/javascript">
        window.onload = function () {
            var successMessage = '@TempData["SuccessMessage"]';
            var duplicateMessage = '@TempData["DuplicateMessage"]';

            if (successMessage || duplicateMessage) {
                var message = "";

                if (successMessage) {
                    message += successMessage + "\n";
                }

                if (duplicateMessage) {
                    message += duplicateMessage;
                }

                alert(message.trim());
            }
        };
    </script>
}


<div class="d-flex justify-content-center mt-5">
    <form asp-action="SaveAsNewFile" method="post">
        <button type="submit" class="btn btn-custom-orange">Save As New File</button>
    </form>
</div>

