@model IEnumerable<NetTracApp.Models.InventoryItem>

@{
    ViewData["Title"] = "Approve Deletion Requests and Manage Inventory";
    var searchString = ViewData["searchString"] as string;
    var pendingDeletionsCount = (int)(ViewData["PendingDeletionsCount"] ?? 0);

   
}

<div class="top-border" style="background-color: #970000; color: #ffff00; height: 80px; border-radius: 8px; margin: 20px auto; padding-left: 20px; display: flex; align-items: center; position: relative; max-width: 100%; width: 1450px;">
    <!-- background text "NetTrac" -->
    <span class="background-text" style="font-size: 70px; font-family: Impact;">NetTrac</span>

    <span id="circle" style="background: black; border-radius: 50%; width: 75px; height: 75px; position: absolute; left: 10px; top: 50%; transform: translateY(-50%);"></span>

    <!-- Centered Text "IT Network Tracker" -->
    <span class="centered-text" style="margin: 0 auto; font-size: 45px; font-family: Impact; color: #ffffff;">IT Network Tracker</span>

    <!-- Home and Login Icons -->
    <span class="icons" style="display: flex; align-items: center; margin-right: 30px;">
        <a href="@Url.Action("Tier3Dashboard", "Tier3")" style="margin-right: 20px; text-decoration: none; color: white;">
            <i class="bi bi-house-door" style="font-size: 2.5rem;"></i>
        </a>
        <a href="@Url.Action("Index", "Login")" style="text-decoration: none; color: white;">
            <i class="bi bi-box-arrow-right" style="font-size: 2.5rem;"></i>
        </a>
    </span>
</div>


<style>
    .scroll-button i {
        font-size: 40px;
        color: white; /* Set arrow icon color to orange */
        transition: color 0.3s ease;
    }

    .scroll-button {
        position: fixed;
        bottom: 20px;
        right: 20px;
        background-color: #ac3e0b; /* Orange circular background */
        border: none;
        border-radius: 50%; 
        width: 60px;
        height: 60px;
        display: flex;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
        z-index: 100;
        transition: background-color 0.3s ease, transform 0.3s ease;
    }
    
    
</style>

<div class="alert alert-warning">
    <strong>
        You have
        <a asp-action="PendingDeletions" style="color: #e05c1a; text-decoration: underline;">
            @pendingDeletionsCount pending deletion(s)
        </a>
        waiting for approval.
    </strong>
</div>


<div class="search-border" style="background-color: black; height: 45px; display: flex; align-items: center; justify-content: space-between; padding-left: 10px; padding-right: 10px; border-radius: 8px; margin-top: 20px; margin-bottom: 5px; max-width: 2000px; margin-left: auto; margin-right: auto; box-sizing: border-box;">
    <div class="search-text" style="color: orange; font-size: 15px; display: flex; align-items: center;">
        Search Inventory
    </div>

  

    <div class="search-length" style="flex-grow: 1; max-width: 800px; padding-left: 10px;">
        <!-- Search Form -->
        <div class="search-form" style="width: 100%;">
            <form asp-action="Tier3Dashboard" method="get" style="width: 100%; display: flex; align-items: center;">
                <div class="form-group" style="margin-bottom: 0; width: 100%; display: flex; align-items: center;">
                    <input type="text" name="searchString" class="form-control" placeholder="Search by Vendor or Serial Number" style="height: 35px; width: 100%; box-sizing: border-box;" />
                </div>
            </form>
        </div>
    </div>

    <div class="toggle-container" style="display: flex; align-items: center; justify-content: center;">
        <span class="toggle-text" style="color: white; font-weight: bold; margin-right: 10px;">
            Data View
        </span>
        <button id="toggleExpand" class="toggle-button" onclick="toggleColumns()" style="height: 20px; display: flex; align-items: center; justify-content: center;"></button>
    </div>
</div>

<button id="scrollToBottomButton" class="scroll-button">
    <i class="bi bi-arrow-down-circle"></i>
</button>



<!-- CSV Upload Form -->
<div class="mb-4">
    <form asp-action="UploadFile" method="post" enctype="multipart/form-data">
        <div class="form-group">
            <!-- Wrap file input and upload button in a flexbox container -->
            <label for="file">Upload CSV File(s):</label>
            <div style="display: flex; align-items: center;">
                <!-- File input field allowing multiple file uploads -->
                <input type="file" name="files" class="form-control-file" multiple style="margin-right: 10px;" />
                <!-- Button placed directly next to the file input field -->
                <button type="submit" class="btn btn-custom-orange" style="height: auto;">Upload</button>
            </div>
        </div>
    </form>
</div>
<div style="text-align: right; margin-bottom: 10px;">
    <a asp-controller="Tier3" asp-action="Create" style="color: #ac3e0b; font-weight: bold; text-decoration: none;">
        Create New Inventory Item
    </a>
</div>


<div style="margin-bottom: 15px;">
    <h4 style="color: #970000; font-size: 1.2rem;">Total Inventory Items: @ViewBag.TotalItems</h4>
</div>


<!-- Inventory Table -->
<form asp-action="DeleteSelected" method="post" id="deleteForm">
    <table id="inventoryTable" class="table table-striped table-bordered">
        <thead class="thead-dark">
            <tr>
                <th class="checkbox-column">
                    <input type="checkbox" class="form-check-input" id="selectAll" onclick="toggleSelectAll()" />
                </th>
                <th>Vendor</th>
                <th>Device Type</th>
                <th>Serial #</th>
                <th>Host Name</th>
                <th>Asset Tag</th>
                <th>Current Location</th>
                <th>Future Location</th>
                <th>Status</th>
                <th>Date Received</th>
                <th>Part ID</th>
                <th class="extra-column">Back Ordered</th>
                <th class="extra-column">Notes</th>
                <th class="extra-column">Product Description</th>
                <th class="extra-column">Ready</th>
                <th class="extra-column">Legacy Device</th>
                <th class="extra-column">Modified</th>
                <th class="extra-column">Created</th>
                <th class="extra-column">Created By</th>
                <th class="extra-column">Modified By</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                @foreach (var item in Model)
                {
                    <tr>
                        <td class="checkbox-column">
                            <input type="checkbox" class="form-check-input item-checkbox" name="selectedSerialNumbers" value="@item.SerialNumber" />
                        </td>
                        <td>@item.Vendor</td>
                        <td>@item.DeviceType</td>
                        <td>@item.SerialNumber</td>
                        <td>@item.HostName</td>
                        <td>@item.AssetTag</td>
                        <td>@item.CurrentLocation</td>
                        <td>@item.FutureLocation</td>
                        <td>@item.Status</td>
                        <td>@item.DateReceived.ToString("MM/dd/yyyy")</td>
                        <td>@item.PartID</td>
                        <td class="extra-column">@item.BackOrdered</td>
                        <td class="extra-column">@item.Notes</td>
                        <td class="extra-column">@item.ProductDescription</td>
                        <td class="extra-column">@item.Ready</td>
                        <td class="extra-column">@item.LegacyDevice</td>
                        <td class="extra-column">@item.Modified</td>
                        <td class="extra-column">@item.Created</td>
                        <td class="extra-column">@item.CreatedBy</td>
                        <td class="extra-column">@item.ModifiedBy</td>
                        <td>
                            <a asp-controller="Tier3" asp-action="Edit" asp-route-serialNumber="@item.SerialNumber" class="btn btn-edit">Edit</a>
                            <a asp-controller="Tier3" asp-action="Delete" asp-route-serialNumber="@item.SerialNumber" class="btn btn-delete">Delete</a>

                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="20" class="text-center">No inventory items found.</td>
                </tr>
            }
        </tbody>
    </table>
    <button type="button" class="btn btn-delete btn-sm centered-button" onclick="confirmDelete()">
        Delete Selected Items
    </button>

</form>


<div style="margin-top: 15px; text-align: right;">
    <p style="font-weight: bold; color: #333;">
       Signed in as: <span style="color: #8B0000;">@ViewBag.UserType </span>
    </p>
</div>

<script>
    // Toggle select all checkboxes
    function toggleSelectAll() {
        const isChecked = document.getElementById('selectAll').checked;
        const checkboxes = document.querySelectorAll('.item-checkbox');
        checkboxes.forEach(checkbox => checkbox.checked = isChecked);
    }

    // Single item delete with confirmation
    function deleteItem(url, id) {
        if (confirm('Are you sure you want to delete this item?')) {
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = `${url}/${id}`;
            document.body.appendChild(form);
            form.submit();
        }
    }









<script>
    // Select all checkboxes when the header checkbox is clicked
    document.getElementById('select-all').addEventListener('change', function (e) {
        const checkboxes = document.querySelectorAll('.row-checkbox');
        checkboxes.forEach(checkbox => checkbox.checked = e.target.checked);
    });

    // Toggle the checkbox when clicking anywhere in a row
    document.querySelectorAll('.selectable-row').forEach(row => {
        row.addEventListener('click', function (e) {
            // Prevent toggling if the user clicked directly on a checkbox
            if (e.target.tagName !== 'INPUT') {
                const checkbox = row.querySelector('.row-checkbox');
                checkbox.checked = !checkbox.checked;
            }
        });
    });
</script>

<script>
    // JavaScript function to toggle the display of extra columns
    function toggleColumns() {
        var toggleButton = document.getElementById("toggleExpand");
        var extraColumns = document.querySelectorAll(".extra-column");
        var isActive = toggleButton.classList.toggle("active");

        // Show or hide extra columns based on toggle button state
        extraColumns.forEach(function (column) {
            column.style.display = isActive ? "table-cell" : "none";
        });
    }
</script>




<script>
    // Select/Deselect all checkboxes when the header checkbox is clicked
    document.getElementById('selectAll').addEventListener('change', function (e) {
        const checkboxes = document.querySelectorAll('.item-checkbox');
        checkboxes.forEach(checkbox => checkbox.checked = e.target.checked);
    });

    // Toggle checkbox selection when clicking on a row, except when clicking on a checkbox directly
    document.querySelectorAll('.selectable-row').forEach(row => {
        row.addEventListener('click', function (e) {
            if (e.target.tagName !== 'INPUT') {
                const checkbox = row.querySelector('.item-checkbox');
                checkbox.checked = !checkbox.checked;
            }
        });
    });

</script>


<!-- Print Button -->
<div class="button-container">
    <button onclick="printInventoryTable()" class="btn btn-edit btn-sm">
        Print Inventory
    </button>
</div>

<script>
    function printInventoryTable() {
        var printContents = document.getElementById("inventoryTable").outerHTML;
    var originalContents = document.body.innerHTML;

    // Set the table contents in the body for printing
    document.body.innerHTML = printContents;

    // Trigger the print dialog
    window.print();

    // Restore the original contents after printing
    document.body.innerHTML = originalContents;
    window.location.reload(); // Reload to ensure scripts and layout restore
    }
</script>

<style>
    @@media print {
        /* Hide everything except the table */
        body * {
            visibility: hidden;
        }

        #inventoryTable, #inventoryTable * {
            visibility: visible;
        }

        #inventoryTable {
            position: absolute;
            left: 0;
            top: 0;
        }
    }
</style>



<!-- JavaScript for Confirmation -->
<script>
    function confirmDelete() {
        const selectedItems = document.querySelectorAll('.item-checkbox:checked');

    // Check if any items are selected
    if (selectedItems.length === 0) {
        alert('Please select at least one item to delete.');
    return;
        }

    // Show confirmation popup
    const confirmDelete = window.confirm(`Are you sure you want to delete ${selectedItems.length} items?`);

    // If confirmed, submit the form
    if (confirmDelete) {
        document.getElementById('deleteForm').submit();
        }
    }

    // Select All Checkbox Logic
    document.getElementById('selectAll').addEventListener('change', function () {
        const checkboxes = document.querySelectorAll('.item-checkbox');
        checkboxes.forEach(checkbox => checkbox.checked = this.checked);
    });
</script>


<script>
    const scrollToBottomButton = document.getElementById('scrollToBottomButton');

    scrollToBottomButton.addEventListener('click', () => {
        // Ensure the page scrolls to the very bottom smoothly
        window.scrollTo({
            top: document.documentElement.scrollHeight - window.innerHeight,
            behavior: 'smooth'
        });
    });
</script>